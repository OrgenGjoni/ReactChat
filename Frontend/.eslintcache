[{"/home/gpc/chat_frontend/src/index.js":"1","/home/gpc/chat_frontend/src/App.js":"2","/home/gpc/chat_frontend/src/reportWebVitals.js":"3","/home/gpc/chat_frontend/src/store/index.js":"4","/home/gpc/chat_frontend/src/socket.js":"5","/home/gpc/chat_frontend/src/components/sidebar/SideBarHeader.jsx":"6","/home/gpc/chat_frontend/src/components/sidebar/SideBarContainerSM.jsx":"7","/home/gpc/chat_frontend/src/components/chatbox/ChatBoxContainerSM.jsx":"8","/home/gpc/chat_frontend/src/components/chatbox/SideBarFAB.jsx":"9","/home/gpc/chat_frontend/src/store/reducer.js":"10","/home/gpc/chat_frontend/src/store/actions.js":"11","/home/gpc/chat_frontend/src/store/constants.js":"12","/home/gpc/chat_frontend/src/LogIn.js":"13","/home/gpc/chat_frontend/src/SignUp.js":"14","/home/gpc/chat_frontend/src/components/chatbox/Chat.js":"15","/home/gpc/chat_frontend/src/components/chatbox/ChatBoxContainer.js":"16","/home/gpc/chat_frontend/src/components/chatbox/ChatHeader.js":"17","/home/gpc/chat_frontend/src/components/chatbox/InputField.js":"18","/home/gpc/chat_frontend/src/components/chatbox/NoChat.js":"19","/home/gpc/chat_frontend/src/components/sidebar/SideBarContainer.js":"20","/home/gpc/chat_frontend/src/components/sidebar/SideBarList.js":"21","/home/gpc/chat_frontend/src/components/sidebar/ConversationItem.js":"22","/home/gpc/chat_frontend/src/components/sidebar/OnlineUsersList.js":"23","/home/gpc/chat_frontend/src/components/sidebar/ListItem.js":"24","/home/gpc/chat_frontend/src/ChatMain.js":"25","/home/gpc/ReactChat/Frontend/src/index.js":"26","/home/gpc/ReactChat/Frontend/src/App.js":"27","/home/gpc/ReactChat/Frontend/src/reportWebVitals.js":"28","/home/gpc/ReactChat/Frontend/src/ChatMain.js":"29","/home/gpc/ReactChat/Frontend/src/LogIn.js":"30","/home/gpc/ReactChat/Frontend/src/SignUp.js":"31","/home/gpc/ReactChat/Frontend/src/store/index.js":"32","/home/gpc/ReactChat/Frontend/src/store/actions.js":"33","/home/gpc/ReactChat/Frontend/src/socket.js":"34","/home/gpc/ReactChat/Frontend/src/components/chatbox/ChatBoxContainer.js":"35","/home/gpc/ReactChat/Frontend/src/components/sidebar/SideBarContainer.js":"36","/home/gpc/ReactChat/Frontend/src/components/sidebar/SideBarContainerSM.jsx":"37","/home/gpc/ReactChat/Frontend/src/components/chatbox/ChatBoxContainerSM.jsx":"38","/home/gpc/ReactChat/Frontend/src/store/reducer.js":"39","/home/gpc/ReactChat/Frontend/src/store/constants.js":"40","/home/gpc/ReactChat/Frontend/src/components/chatbox/InputField.js":"41","/home/gpc/ReactChat/Frontend/src/components/chatbox/ChatHeader.js":"42","/home/gpc/ReactChat/Frontend/src/components/chatbox/NoChat.js":"43","/home/gpc/ReactChat/Frontend/src/components/sidebar/SideBarList.js":"44","/home/gpc/ReactChat/Frontend/src/components/chatbox/Chat.js":"45","/home/gpc/ReactChat/Frontend/src/components/sidebar/SideBarHeader.jsx":"46","/home/gpc/ReactChat/Frontend/src/components/sidebar/OnlineUsersList.js":"47","/home/gpc/ReactChat/Frontend/src/components/chatbox/SideBarFAB.jsx":"48","/home/gpc/ReactChat/Frontend/src/components/sidebar/ConversationItem.js":"49","/home/gpc/ReactChat/Frontend/src/components/sidebar/ListItem.js":"50"},{"size":478,"mtime":1613232662689,"results":"51","hashOfConfig":"52"},{"size":741,"mtime":1613682826208,"results":"53","hashOfConfig":"52"},{"size":362,"mtime":1607702036857,"results":"54","hashOfConfig":"52"},{"size":293,"mtime":1613655739467,"results":"55","hashOfConfig":"52"},{"size":141,"mtime":1613683484585,"results":"56","hashOfConfig":"52"},{"size":1784,"mtime":1613683213028,"results":"57","hashOfConfig":"52"},{"size":1182,"mtime":1613683158841,"results":"58","hashOfConfig":"52"},{"size":930,"mtime":1613593397411,"results":"59","hashOfConfig":"52"},{"size":933,"mtime":1613663410868,"results":"60","hashOfConfig":"52"},{"size":1841,"mtime":1613679274167,"results":"61","hashOfConfig":"52"},{"size":1542,"mtime":1613663647875,"results":"62","hashOfConfig":"52"},{"size":856,"mtime":1613663586815,"results":"63","hashOfConfig":"52"},{"size":3784,"mtime":1613682327310,"results":"64","hashOfConfig":"52"},{"size":6292,"mtime":1613661118227,"results":"65","hashOfConfig":"52"},{"size":1984,"mtime":1613683000446,"results":"66","hashOfConfig":"52"},{"size":1048,"mtime":1613591626093,"results":"67","hashOfConfig":"52"},{"size":1056,"mtime":1613596737285,"results":"68","hashOfConfig":"52"},{"size":2856,"mtime":1613589250086,"results":"69","hashOfConfig":"52"},{"size":936,"mtime":1613229837884,"results":"70","hashOfConfig":"52"},{"size":621,"mtime":1613573241682,"results":"71","hashOfConfig":"52"},{"size":4305,"mtime":1613683306991,"results":"72","hashOfConfig":"52"},{"size":2510,"mtime":1613679541410,"results":"73","hashOfConfig":"52"},{"size":832,"mtime":1613683132489,"results":"74","hashOfConfig":"52"},{"size":904,"mtime":1613683036242,"results":"75","hashOfConfig":"52"},{"size":4343,"mtime":1613682948735,"results":"76","hashOfConfig":"52"},{"size":478,"mtime":1613232662000,"results":"77","hashOfConfig":"78"},{"size":741,"mtime":1613682826000,"results":"79","hashOfConfig":"78"},{"size":362,"mtime":1607702036000,"results":"80","hashOfConfig":"78"},{"size":4320,"mtime":1613743233526,"results":"81","hashOfConfig":"78"},{"size":4002,"mtime":1613745540904,"results":"82","hashOfConfig":"78"},{"size":6437,"mtime":1613745251811,"results":"83","hashOfConfig":"78"},{"size":293,"mtime":1613655739000,"results":"84","hashOfConfig":"78"},{"size":1542,"mtime":1613663647000,"results":"85","hashOfConfig":"78"},{"size":141,"mtime":1613683484000,"results":"86","hashOfConfig":"78"},{"size":924,"mtime":1613745351952,"results":"87","hashOfConfig":"78"},{"size":621,"mtime":1613573241000,"results":"88","hashOfConfig":"78"},{"size":1182,"mtime":1613683158000,"results":"89","hashOfConfig":"78"},{"size":930,"mtime":1613593397000,"results":"90","hashOfConfig":"78"},{"size":1841,"mtime":1613679274000,"results":"91","hashOfConfig":"78"},{"size":632,"mtime":1616009255435,"results":"92","hashOfConfig":"78"},{"size":2856,"mtime":1613589250000,"results":"93","hashOfConfig":"78"},{"size":1056,"mtime":1613596737000,"results":"94","hashOfConfig":"78"},{"size":936,"mtime":1613229837000,"results":"95","hashOfConfig":"78"},{"size":4344,"mtime":1613747363516,"results":"96","hashOfConfig":"78"},{"size":1966,"mtime":1613745370492,"results":"97","hashOfConfig":"78"},{"size":1784,"mtime":1613683213000,"results":"98","hashOfConfig":"78"},{"size":832,"mtime":1613683132000,"results":"99","hashOfConfig":"78"},{"size":933,"mtime":1613663410000,"results":"100","hashOfConfig":"78"},{"size":2765,"mtime":1613754742851,"results":"101","hashOfConfig":"78"},{"size":904,"mtime":1613683036000,"results":"102","hashOfConfig":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"1q6i14c",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},"16pjni9",{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"156"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"156"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"156"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},"/home/gpc/chat_frontend/src/index.js",[],["208","209"],"/home/gpc/chat_frontend/src/App.js",[],"/home/gpc/chat_frontend/src/reportWebVitals.js",[],"/home/gpc/chat_frontend/src/store/index.js",[],"/home/gpc/chat_frontend/src/socket.js",[],"/home/gpc/chat_frontend/src/components/sidebar/SideBarHeader.jsx",[],"/home/gpc/chat_frontend/src/components/sidebar/SideBarContainerSM.jsx",[],"/home/gpc/chat_frontend/src/components/chatbox/ChatBoxContainerSM.jsx",[],"/home/gpc/chat_frontend/src/components/chatbox/SideBarFAB.jsx",[],"/home/gpc/chat_frontend/src/store/reducer.js",[],"/home/gpc/chat_frontend/src/store/actions.js",[],"/home/gpc/chat_frontend/src/store/constants.js",[],"/home/gpc/chat_frontend/src/LogIn.js",["210"],"/home/gpc/chat_frontend/src/SignUp.js",["211","212"],"/home/gpc/chat_frontend/src/components/chatbox/Chat.js",[],"/home/gpc/chat_frontend/src/components/chatbox/ChatBoxContainer.js",[],"/home/gpc/chat_frontend/src/components/chatbox/ChatHeader.js",[],"/home/gpc/chat_frontend/src/components/chatbox/InputField.js",[],"/home/gpc/chat_frontend/src/components/chatbox/NoChat.js",[],"/home/gpc/chat_frontend/src/components/sidebar/SideBarContainer.js",[],"/home/gpc/chat_frontend/src/components/sidebar/SideBarList.js",[],"/home/gpc/chat_frontend/src/components/sidebar/ConversationItem.js",[],"/home/gpc/chat_frontend/src/components/sidebar/OnlineUsersList.js",[],"/home/gpc/chat_frontend/src/components/sidebar/ListItem.js",[],"/home/gpc/chat_frontend/src/ChatMain.js",["213"],"/home/gpc/ReactChat/Frontend/src/index.js",[],["214","215"],"/home/gpc/ReactChat/Frontend/src/App.js",[],"/home/gpc/ReactChat/Frontend/src/reportWebVitals.js",[],"/home/gpc/ReactChat/Frontend/src/ChatMain.js",["216"],"import React,{useEffect} from 'react';\nimport {makeStyles,withWidth,Container,Grid} from '@material-ui/core';\nimport {useHistory} from 'react-router-dom';\nimport {useDispatch,useSelector} from 'react-redux';\nimport {fetchConversations,setOnlineList,setId,setConversationsList,setActiveChat,setMessages,newMsgNotification} from './store/actions';\nimport _ from 'lodash';\nimport socket from './socket';\n\n\n\nimport SideBarContainer from './components/sidebar/SideBarContainer';\nimport ChatBoxContainer from './components/chatbox/ChatBoxContainer';\n\nimport SideBarContainerSM from './components/sidebar/SideBarContainerSM';\nimport ChatBoxContainerSM from './components/chatbox/ChatBoxContainerSM';\nconst SERVER = process.env.REACT_APP_SERVER_ADDRESS;\n\nconst newStyle = makeStyles(()=>({\n  container : {\n    padding : 0,\n    height : '100vh',\n    overflowY : 'hidden',\n\n  }\n}))\n\n\nconst notification = new Audio('notification.mp3');\n\n\nconst ChatPage = ({width})=>{\n\n\n\n  const dispatch = useDispatch();\n  const [activeChat,activeUser,conversations_list,messages,id,slideOpen] = useSelector((state)=>[state.activeChat,state.activeUser,state.conversations,state.messages,state.id,state.slideOpen]);\n  const history = useHistory();\n  const style = newStyle();\n\n\n\n\n  const addNewConversation = (conv)=>{\n\n\n    const newConv = [conv].concat(conversations_list);\n    dispatch(setConversationsList(newConv));\n\n    const part = _.find(conv.partecipants, (part)=>(part.username === activeUser.username));\n\n\n    if(typeof part != 'undefined'){\n       dispatch(setMessages([conv.conversation]));\n       dispatch(setActiveChat(conv));\n    }\n  }\n\n  const addNewMessage = (msg)=>{\n    const convListCopy = Object.assign([],conversations_list);\n    const conv = _.find(convListCopy,(conv)=>(conv.conv_id === msg.conv_id));\n    const filtered = _.filter(convListCopy,(conv)=>(conv.conv_id !== msg.conv_id));\n    conv.conversation = msg;\n    if(conv.conv_id !== activeChat.conv_id){\n      conv.unread_mesages = conv.unread_mesages + 1;\n    }else{\n      const newMsgArray = messages.concat([msg])\n      dispatch(setMessages(newMsgArray));\n      socket.emit('read',conv.conv_id);\n    }\n\n    const newConvList = [conv].concat(filtered);\n\n    dispatch(setConversationsList(newConvList));\n  }\n\n\n\n  useEffect(()=>{\n\n    if(localStorage.getItem('token') == null){\n      history.push('/')\n    }else{\n\n      dispatch(fetchConversations(SERVER + '/conversations/' + localStorage.token))\n\n      socket.on('connect_error',(err)=>{\n        if(err.message === 'Authentication Error'){\n          localStorage.clear();\n          history.push('/');\n        }\n      });\n\n      socket.emit('log_in',localStorage.getItem('token'));\n      socket.on('loged_out',()=>{\n\n        localStorage.clear();\n        history.push('/');\n        console.log('Disconnected from server');\n      })\n\n      socket.on('online_users',(res)=>{\n        dispatch(setOnlineList(res));\n      });\n\n      socket.on('id',(res)=>{\n        dispatch(setId(res));\n      })\n\n\n\n    }\n  },[])\n\n  useEffect(()=>{\n\n    socket.on('newconversation',(conv)=>{\n      addNewConversation(conv);\n\n      if(conv.conversation.sender_id !== id._id || slideOpen === false){\n        dispatch(newMsgNotification());\n\n      }\n\n      if (( window.innerWidth >= 800 ) && ( window.innerHeight >= 600 )){\n\n        notification.play();\n      }\n\n\n    })\n\n    return ()=>{socket.off('newconversation')}\n    }\n\n  );\n\n\n\n  useEffect(()=>{\n    socket.on('newmessage',(msg)=>{\n      addNewMessage(msg);\n\n      if(msg.conv_id !== activeChat.conv_id){\n        dispatch(newMsgNotification());\n      }\n\n      if (( window.innerWidth >= 800 ) && ( window.innerHeight >= 600 )){\n        notification.play();\n      }\n\n    });\n\n    return ()=>{socket.off('newmessage')}\n  })\n\n  return(\n      <Container\n        maxWidth='xl'\n        component = 'main'\n        className = {style.container}\n      >\n          <Grid\n            container\n            direction = 'row'\n            justify = 'center'\n          >\n              {(width === 'xs' || width === 'sm' || width === 'ms' )  ? <SideBarContainerSM /> : <SideBarContainer />}\n              {(width === 'xs' || width === 'sm' || width === 'ms' )  ? <ChatBoxContainerSM /> : <ChatBoxContainer />}\n\n\n            </Grid>\n      </Container>\n  );\n}\n\n\n\nexport default withWidth()(ChatPage);\n","/home/gpc/ReactChat/Frontend/src/LogIn.js",["217"],"import React,{useState,useEffect} from 'react';\nimport {makeStyles,Container,Paper,Grid,Typography,TextField,Button} from '@material-ui/core';\nimport {Alert} from '@material-ui/lab';\nimport {useHistory,Link} from 'react-router-dom';\nimport {AiOutlineUser} from 'react-icons/ai';\n\nconst newStyle = makeStyles(()=>({\n  container : {\n    margin : 'auto',\n    width : '100vw',\n    height : '100vh',\n    backgroundColor : '#2d6a4f'\n\n  },\n  tab : {\n    padding : '5em',\n    width : '80%',\n    height : '100%',\n    minWidth : 300,\n    margin : 'auto'\n\n  },\n  paper : {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justify : 'center',\n    padding : 20,\n    margin : 'auto',\n    minWidth : 300\n\n\n  },\n  link : {\n    fontSize : '0.8em',\n    color : 'blue',\n    padding : '0.5em',\n    textDecoration : 'none'\n  },\n  button : {\n    width : '10em'\n  }\n\n}));\n\nconst LogIn = ()=>{\n\n  const style = newStyle();\n  const history = useHistory();\n  const SERVER = process.env.REACT_APP_SERVER_ADDRESS;\n  const [username,setUsername] = useState();\n  const [password,setPassword] = useState();\n  const [err, setErr] = useState(false);\n\n  const handleSubmit = (e)=>{\n    e.preventDefault();\n\n    const url = SERVER + '/login';\n    const headers = new Headers();\n    headers.append('Accept' ,'application/json');\n    headers.append('Content-Type','application/json');\n\n    const body = {\n      username : username,\n      password : password\n    }\n\n    fetch(url,{\n      method : 'POST',\n      mode : 'cors',\n      headers : headers,\n      body : JSON.stringify(body)\n    })\n      .then((res)=>{return res.json()})\n      .then((res)=>{\n          if(typeof res.token != 'undefined'){\n            localStorage.setItem('token',res.token);\n            history.push('/chat');\n          }else{\n            setErr(res.message);\n          }\n        })\n      .catch((err)=>{console.log(err)})\n  }\n\n\n\n  useEffect(()=>{\n\n    if( localStorage.getItem('token') != null){\n\n      history.push('/chat');\n    }else{\n\n      history.push('/');\n    }\n  },[])\n\n\n\n  return(\n    <Container maxWidth='xl' component = 'main' className = {style.container}>\n      <Grid className = {style.tab}\n        direction = 'row'\n        container\n        justify = 'center'\n        alignItems = 'center'\n      >\n        <Paper>\n          <form>\n              <div className = {style.paper}>\n                  <AiOutlineUser size = {30}/>\n                  <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                  </Typography>\n\n                  <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"username\"\n                  label=\"Username\"\n                  type=\"text\"\n                  id=\"username\"\n                  autoComplete=\"current-username\"\n                  onChange = {(e)=>{setUsername(e.target.value)}}\n                  />\n\n\n                  <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  onChange = {(e)=>{setPassword(e.target.value)}}\n                  />\n\n                    {err && <Alert severity=\"warning\"> {err} </Alert>}\n                  <Link to = {'/signup'} className = {style.link}> Register now </Link>\n\n\n                  <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className = {style.button}\n                  onClick = {(e)=>{handleSubmit(e)}}\n                  >\n                    Sign In\n                  </Button>\n\n\n                </div>\n            </form>\n\n        </Paper>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default LogIn;\n","/home/gpc/ReactChat/Frontend/src/SignUp.js",["218","219"],"import React,{useState,useEffect} from 'react';\nimport {makeStyles,Container,Paper,Grid,Typography,TextField,Button,CircularProgress} from '@material-ui/core';\nimport {Alert} from '@material-ui/lab/';\nimport {useHistory} from 'react-router-dom';\nimport _ from 'lodash';\nimport {AiOutlineUserAdd} from 'react-icons/ai';\n\nconst newStyle = makeStyles(()=>({\n  container : {\n    width : '100vw',\n    height : '100vh',\n    backgroundColor : '#2d6a4f'\n\n  },\n  tab : {\n\n    padding : '5em',\n    width : '40%',\n    height : '100%',\n    minWidth : 300,\n    margin : 'auto'\n\n  },\n  paper : {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justify : 'center',\n    padding : 20,\n    margin : 'auto',\n    minWidth : 400\n\n  },\n  link : {\n    fontSize : '0.8em',\n    color : 'blue',\n    padding : '0.5em',\n    textDecoration : 'none'\n  },\n  button : {\n    width : '10em'\n  }\n\n}));\n\n\n\nconst SignUp = ()=>{\n\n  const style = newStyle();\n  const SERVER = process.env.REACT_APP_SERVER_ADDRESS;\n\n  const alertList = {\n    username : 'Username must be at least 6 characters',\n    password : 'Password must be at least 6 characters',\n    match    : 'Password does not match',\n    taken_username : 'Username is already taken'\n  }\n\n  const history = useHistory();\n  const [username,setUsername] = useState(false);\n  const [password,setPassword] = useState(false);\n  const [alert,setAlert] = useState([]);\n  const [response,setResponse] = useState([]);\n\n\n\n  const usernameChange = (e)=>{\n    if(e.target.value.length < 6 ){\n      setUsername(false);\n      const newAlert = _.filter(alert,(el)=>{return el !== alertList.username})\n      setAlert([...newAlert,alertList.username]);\n    }else{\n\n      const newAlert = _.filter(alert,(el)=>{return el !== alertList.username})\n      setAlert(newAlert);\n      setUsername(e.target.value);\n    }\n  }\n\n  const passwordChange = (e)=>{\n    if(e.target.value.length < 6 ){\n      setPassword(false);\n       const newAlert = _.filter(alert,(el)=>{return el !== alertList.password})\n       setAlert([...newAlert,alertList.password]);\n    }else{\n\n      const newAlert = _.filter(alert,(el)=>{return el !== alertList.password})\n      setAlert(newAlert);\n      setPassword(e.target.value);\n    }\n  }\n\n  const passwordMatch = (e)=>{\n\n    if(e.target.value !== password ){\n      const newAlert = _.filter(alert,(el)=>{return el !== alertList.match})\n      setAlert([...newAlert,alertList.match]);\n    }else{\n      const newAlert = _.filter(alert,(el)=>{return el !== alertList.match})\n      setAlert(newAlert);\n      \n    }\n  }\n\n  const usernameCheck = (res)=>{\n\n    const resAlert = _.find(res,(el)=>{return el.msg === alertList.taken_username});\n\n    if(typeof resAlert != 'undefined'){\n      const newAlert = _.filter(alert,(el)=>{return el !== alertList.taken_username})\n      setAlert([...newAlert,alertList.taken_username]);\n    }else{\n      const newAlert = _.filter(alert,(el)=>{return el !== alertList.taken_username})\n      setAlert(newAlert);\n    }\n  }\n\n\n\n  const showAlerts = (alert)=>(\n    <Alert severity=\"warning\" >{alert}</Alert>\n  );\n\n\n\n\n  const handleSubmit = (e)=>{\n    e.preventDefault();\n\n    if(username && password){\n\n      const url = SERVER + '/signup';\n      const headers = new Headers();\n      headers.append('Accept' ,'application/json');\n      headers.append('Content-Type','application/json');\n\n      const body = {\n        username : username,\n        password : password\n      }\n\n      fetch(url,{\n        method : 'POST',\n        mode : 'cors',\n        headers : headers,\n        body : JSON.stringify(body)\n      })\n      .then((res)=>{return res.json()})\n      .then((res)=>{\n            setResponse(res);\n            usernameCheck(res.error);\n      })\n      .catch((err)=>{console.log(err)});\n\n    }else{\n      console.log('Oopsiee...');\n    }\n  }\n\n\n\n\n  useEffect(()=>{\n    let tOut;\n    if(response.message === 'New account successfully created'){\n        const reDir = ()=>{ history.push('/')};\n        tOut = setTimeout(reDir,3000);\n    }\n\n\n  },[response]);\n\n  return(\n    <Container maxWidth='xl' component = 'main' className = {style.container}>\n      <Grid className = {style.tab}\n        container\n        justify = 'center'\n        alignItems = 'center'\n      >\n        <Paper >\n          <form>\n              <div className = {style.paper}>\n                  <AiOutlineUserAdd size = {30} />\n                  <Typography component=\"h1\" variant=\"h5\">\n                    Sign Up\n                  </Typography>\n\n                  <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"username\"\n                  label=\"Username\"\n                  type=\"text\"\n                  id=\"username\"\n                  autoComplete=\"current-username\"\n                  onChange = {(e)=>{usernameChange(e)}}\n                  />\n\n\n                  <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  onChange = {(e)=>{passwordChange(e)}}\n                  />\n\n                  <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"repeatPassword\"\n                  label=\"Repeat Password\"\n                  type=\"password\"\n                  id=\"passwordre\"\n                  onChange = {(e)=>{passwordMatch(e)}}\n                  />\n\n\n\n                  {alert.map((element)=>showAlerts(element))}\n                  {typeof response.message != 'undefined' && <CircularProgress size = {25}/>}\n                  {typeof response.message != 'undefined' && <Alert severity=\"success\" >{response.message}</Alert>}\n\n                  <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className = {style.button}\n                  onClick = {(e)=>{handleSubmit(e)}}\n                >\n                  Sign Up\n                </Button>\n\n\n                </div>\n            </form>\n\n        </Paper>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default SignUp;\n","/home/gpc/ReactChat/Frontend/src/store/index.js",[],"/home/gpc/ReactChat/Frontend/src/store/actions.js",[],"/home/gpc/ReactChat/Frontend/src/socket.js",[],"/home/gpc/ReactChat/Frontend/src/components/chatbox/ChatBoxContainer.js",[],"/home/gpc/ReactChat/Frontend/src/components/sidebar/SideBarContainer.js",[],"/home/gpc/ReactChat/Frontend/src/components/sidebar/SideBarContainerSM.jsx",[],"/home/gpc/ReactChat/Frontend/src/components/chatbox/ChatBoxContainerSM.jsx",[],"/home/gpc/ReactChat/Frontend/src/store/reducer.js",[],"/home/gpc/ReactChat/Frontend/src/store/constants.js",[],"/home/gpc/ReactChat/Frontend/src/components/chatbox/InputField.js",[],"/home/gpc/ReactChat/Frontend/src/components/chatbox/ChatHeader.js",[],"/home/gpc/ReactChat/Frontend/src/components/chatbox/NoChat.js",[],"/home/gpc/ReactChat/Frontend/src/components/sidebar/SideBarList.js",[],"/home/gpc/ReactChat/Frontend/src/components/chatbox/Chat.js",[],"/home/gpc/ReactChat/Frontend/src/components/sidebar/SideBarHeader.jsx",[],"/home/gpc/ReactChat/Frontend/src/components/sidebar/OnlineUsersList.js",[],"/home/gpc/ReactChat/Frontend/src/components/chatbox/SideBarFAB.jsx",[],"/home/gpc/ReactChat/Frontend/src/components/sidebar/ConversationItem.js",[],"/home/gpc/ReactChat/Frontend/src/components/sidebar/ListItem.js",[],{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":91,"column":5,"nodeType":"226","endLine":91,"endColumn":7,"suggestions":"227"},{"ruleId":"228","severity":1,"message":"229","line":164,"column":9,"nodeType":"230","messageId":"231","endLine":164,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":168,"column":5,"nodeType":"226","endLine":168,"endColumn":15,"suggestions":"232"},{"ruleId":"224","severity":1,"message":"233","line":112,"column":5,"nodeType":"226","endLine":112,"endColumn":7,"suggestions":"234"},{"ruleId":"220","replacedBy":"235"},{"ruleId":"222","replacedBy":"236"},{"ruleId":"224","severity":1,"message":"233","line":112,"column":5,"nodeType":"226","endLine":112,"endColumn":7,"suggestions":"237"},{"ruleId":"224","severity":1,"message":"225","line":97,"column":5,"nodeType":"226","endLine":97,"endColumn":7,"suggestions":"238"},{"ruleId":"228","severity":1,"message":"229","line":168,"column":9,"nodeType":"230","messageId":"231","endLine":168,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":172,"column":5,"nodeType":"226","endLine":172,"endColumn":15,"suggestions":"239"},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["242"],"no-unused-vars","'tOut' is assigned a value but never used.","Identifier","unusedVar",["243"],"React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["244"],["240"],["241"],["245"],["246"],["247"],"no-global-assign","no-unsafe-negation",{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"252","fix":"254"},{"desc":"248","fix":"255"},{"desc":"250","fix":"256"},"Update the dependencies array to be: [history]",{"range":"257","text":"258"},"Update the dependencies array to be: [history, response]",{"range":"259","text":"260"},"Update the dependencies array to be: [dispatch, history]",{"range":"261","text":"262"},{"range":"263","text":"262"},{"range":"264","text":"258"},{"range":"265","text":"260"},[1917,1919],"[history]",[3947,3957],"[history, response]",[3009,3011],"[dispatch, history]",[3009,3011],[2045,2047],[4023,4033]]